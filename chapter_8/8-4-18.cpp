#include <iostream>
#include <vector>
#include <algorithm>
/* check whether sum can be generated by two numbers in the vector. */

template <typename Iter>
void print_vec(Iter begin, Iter end) {
    Iter itr = begin;
    while (itr != end) {
        std::cout << *itr << " ";
        itr++;
    }
    std::cout << '\n';
}

bool solution(std::vector<int> arr, int target) {
    sort(arr.begin(), arr.end());
    auto cutPoint = find_if(arr.begin(), arr.end(), [&target](const int& elem){
            if (elem >= target) return true;
            else return false;
        });
    std::cout << *cutPoint << '\n';
//    print_vec(arr.begin(), cutPoint);
//    print_vec(cutPoint, arr.end());
    std::vector<int> int_vec(arr.begin(), cutPoint);
    for (size_t i = 0; i < int_vec.size(); ++i) {
        auto Itr = find_if(int_vec.begin(), int_vec.end(), [&](const int& elem) {
            return (elem == (target - int_vec[i]) );
        });
        if (Itr != int_vec.end()) {
            if ( *Itr == int_vec[i] ) return false;
            std::cout << int_vec[i] << " + " ;
            std::cout << *Itr << " = " << target << '\n';
            return true;
        }
    }
    return false;;
}

int main() {
    std::vector<int> arr = {1, 2, 3, 4, 6, 8, 10 , 11, 12};
    solution(arr, 6); //ok
    arr.clear();
    arr = {2, 3, 5, 9};
    solution(arr, 10);
    return 0;
}
